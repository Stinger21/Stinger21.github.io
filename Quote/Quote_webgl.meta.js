Bridge.assembly("Quote_webgl", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = ["System","Quote","Bridge.WebGL"];
    $m("Debug", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"Log","is":true,"t":8,"pi":[{"n":"o","pt":$n[0].Object,"ps":0}],"sn":"Log","rt":$n[0].Void,"p":[$n[0].Object]}]}; }, $n);
    $m("File", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"ReadAllBytes","is":true,"t":8,"pi":[{"n":"Path","pt":$n[0].String,"ps":0}],"sn":"ReadAllBytes","rt":$n[0].Array.type(System.Byte),"p":[$n[0].String]},{"a":2,"n":"ReadAllFloatsFormString","is":true,"t":8,"pi":[{"n":"data","pt":$n[0].String,"ps":0}],"sn":"ReadAllFloatsFormString","rt":$n[0].Array.type(System.Single),"p":[$n[0].String]},{"a":2,"n":"ReadAllText","is":true,"t":8,"pi":[{"n":"Path","pt":$n[0].String,"ps":0}],"sn":"ReadAllText","rt":$n[0].String,"p":[$n[0].String]}]}; }, $n);
    $m("Graphics", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"Clear","is":true,"t":8,"pi":[{"n":"Color","pt":$n[1].Color,"ps":0}],"sn":"Clear","rt":$n[0].Void,"p":[$n[1].Color]},{"a":1,"n":"DrawMesh","is":true,"t":8,"pi":[{"n":"program","pt":$n[2].WebGLProgram,"ps":0},{"n":"buffer","pt":$n[2].WebGLBuffer,"ps":1},{"n":"verts","pt":$n[0].Int32,"ps":2},{"n":"x","dv":0.0,"o":true,"pt":$n[0].Single,"ps":3}],"sn":"DrawMesh","rt":$n[0].Void,"p":[$n[2].WebGLProgram,$n[2].WebGLBuffer,$n[0].Int32,$n[0].Single]},{"a":2,"n":"Initialize","is":true,"t":8,"pi":[{"n":"Width","pt":$n[0].Int32,"ps":0},{"n":"Height","pt":$n[0].Int32,"ps":1}],"sn":"Initialize","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":1,"n":"RenderCallback","is":true,"t":8,"sn":"RenderCallback","rt":$n[0].Void},{"a":1,"n":"SetVertexAttribute","is":true,"t":8,"pi":[{"n":"program","pt":$n[2].WebGLProgram,"ps":0},{"n":"AttributeName","pt":$n[0].String,"ps":1},{"n":"ElementsPerAttribute","pt":$n[0].Int32,"ps":2},{"n":"SizeOfVertex","pt":$n[0].Int32,"ps":3},{"n":"OffsetWithinVertex","pt":$n[0].Int32,"ps":4}],"sn":"SetVertexAttribute","rt":$n[0].Void,"p":[$n[2].WebGLProgram,$n[0].String,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":1,"n":"UploadMesh","is":true,"t":8,"pi":[{"n":"Triangles","pt":$n[0].Array.type(System.Single),"ps":0}],"sn":"UploadMesh","rt":$n[2].WebGLBuffer,"p":[$n[0].Array.type(System.Single)]},{"a":1,"n":"UploadShader","is":true,"t":8,"pi":[{"n":"Shader","pt":$n[0].String,"ps":0}],"sn":"UploadShader","rt":$n[2].WebGLProgram,"p":[$n[0].String]},{"a":1,"n":"Canvas","is":true,"t":4,"rt":HTMLCanvasElement,"sn":"Canvas"},{"a":1,"n":"CurrentMesh","is":true,"t":4,"rt":$n[2].WebGLBuffer,"sn":"CurrentMesh"},{"a":1,"n":"CurrentProgram","is":true,"t":4,"rt":$n[2].WebGLProgram,"sn":"CurrentProgram"},{"a":1,"n":"GlobalShader","is":true,"t":4,"rt":$n[0].String,"sn":"GlobalShader"},{"a":1,"n":"TriangleVertices","is":true,"t":4,"rt":$n[0].Array.type(System.Single),"sn":"TriangleVertices"},{"a":1,"n":"gl","is":true,"t":4,"rt":$n[2].WebGLRenderingContext,"sn":"gl"}]}; }, $n);
    $m("App", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Main","is":true,"t":8,"sn":"Main","rt":$n[0].Void}]}; }, $n);
    $m("math", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"AngleBetween","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[1].float2,"ps":1}],"sn":"AngleBetween","rt":$n[0].Single,"p":[$n[1].float2,$n[1].float2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ClosestRayApproach","is":true,"t":8,"pi":[{"n":"l1Pos","pt":$n[1].float3,"ps":0},{"n":"l1Dir","pt":$n[1].float3,"ps":1},{"n":"l2Pos","pt":$n[1].float3,"ps":2},{"n":"l2dir","pt":$n[1].float3,"ps":3}],"sn":"ClosestRayApproach","rt":$n[1].float3,"p":[$n[1].float3,$n[1].float3,$n[1].float3,$n[1].float3]},{"a":2,"n":"ClosestRayDistance","is":true,"t":8,"pi":[{"n":"l1Pos","pt":$n[1].float3,"ps":0},{"n":"l1Dir","pt":$n[1].float3,"ps":1},{"n":"l2Pos","pt":$n[1].float3,"ps":2},{"n":"l2dir","pt":$n[1].float3,"ps":3}],"sn":"ClosestRayDistance","rt":$n[0].Single,"p":[$n[1].float3,$n[1].float3,$n[1].float3,$n[1].float3],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MoveTowards","is":true,"t":8,"pi":[{"n":"value","pt":$n[1].float2,"ps":0},{"n":"target","pt":$n[1].float2,"ps":1},{"n":"maxDistance","pt":$n[0].Single,"ps":2}],"sn":"MoveTowards","rt":$n[1].float2,"p":[$n[1].float2,$n[1].float2,$n[0].Single]},{"a":2,"n":"MoveTowards","is":true,"t":8,"pi":[{"n":"value","pt":$n[0].Single,"ps":0},{"n":"target","pt":$n[0].Single,"ps":1},{"n":"maxDistance","pt":$n[0].Single,"ps":2}],"sn":"MoveTowards$1","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Remap","is":true,"t":8,"pi":[{"n":"startMin","pt":$n[0].Single,"ps":0},{"n":"startMax","pt":$n[0].Single,"ps":1},{"n":"value","pt":$n[0].Single,"ps":2},{"n":"targetMin","pt":$n[0].Single,"ps":3},{"n":"targetMax","pt":$n[0].Single,"ps":4}],"sn":"Remap","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ToDegrees","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"ToDegrees","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ToRadians","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"ToRadians","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"VectorToAngle","is":true,"t":8,"pi":[{"n":"vector","pt":$n[1].float2,"ps":0}],"sn":"VectorToAngle","rt":$n[0].Single,"p":[$n[1].float2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"abs","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"abs","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"acos","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"acos","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"asin","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"asin","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"atan","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"atan","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"atan2","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0}],"sn":"atan2","rt":$n[0].Single,"p":[$n[1].float2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"atan2","is":true,"t":8,"pi":[{"n":"y","pt":$n[0].Single,"ps":0},{"n":"x","pt":$n[0].Single,"ps":1}],"sn":"atan2$1","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ceil","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"ceil","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"clamp","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Color,"ps":0},{"n":"Max","pt":$n[0].Single,"ps":1},{"n":"Min","pt":$n[0].Single,"ps":2}],"sn":"clamp","rt":$n[1].Color,"p":[$n[1].Color,$n[0].Single,$n[0].Single]},{"a":2,"n":"clamp","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Quaternion,"ps":0},{"n":"Max","pt":$n[0].Single,"ps":1},{"n":"Min","pt":$n[0].Single,"ps":2}],"sn":"clamp$3","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[0].Single,$n[0].Single]},{"a":2,"n":"clamp","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].float2,"ps":0},{"n":"Max","pt":$n[0].Single,"ps":1},{"n":"Min","pt":$n[0].Single,"ps":2}],"sn":"clamp$1","rt":$n[1].float2,"p":[$n[1].float2,$n[0].Single,$n[0].Single]},{"a":2,"n":"clamp","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].float3,"ps":0},{"n":"Max","pt":$n[0].Single,"ps":1},{"n":"Min","pt":$n[0].Single,"ps":2}],"sn":"clamp$2","rt":$n[1].float3,"p":[$n[1].float3,$n[0].Single,$n[0].Single]},{"a":2,"n":"clamp","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"Max","pt":$n[0].Single,"ps":1},{"n":"Min","pt":$n[0].Single,"ps":2}],"sn":"clamp$4","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"clamp01","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"clamp01","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"cos","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"cos","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"cross","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1}],"sn":"cross","rt":$n[1].float3,"p":[$n[1].float3,$n[1].float3]},{"a":2,"n":"distance","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Color,"ps":0},{"n":"B","pt":$n[1].Color,"ps":1}],"sn":"distance","rt":$n[0].Single,"p":[$n[1].Color,$n[1].Color],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"distance","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Quaternion,"ps":0},{"n":"B","pt":$n[1].Quaternion,"ps":1}],"sn":"distance$3","rt":$n[0].Single,"p":[$n[1].Quaternion,$n[1].Quaternion],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"distance","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[1].float2,"ps":1}],"sn":"distance$1","rt":$n[0].Single,"p":[$n[1].float2,$n[1].float2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"distance","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1}],"sn":"distance$2","rt":$n[0].Single,"p":[$n[1].float3,$n[1].float3],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"distance","is":true,"t":8,"pi":[{"n":"A","pt":$n[0].Single,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"distance$4","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"dot","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Color,"ps":0},{"n":"B","pt":$n[1].Color,"ps":1}],"sn":"dot","rt":$n[0].Single,"p":[$n[1].Color,$n[1].Color],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"dot","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Quaternion,"ps":0},{"n":"B","pt":$n[1].Quaternion,"ps":1}],"sn":"dot$3","rt":$n[0].Single,"p":[$n[1].Quaternion,$n[1].Quaternion],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"dot","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[1].float2,"ps":1}],"sn":"dot$1","rt":$n[0].Single,"p":[$n[1].float2,$n[1].float2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"dot","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1}],"sn":"dot$2","rt":$n[0].Single,"p":[$n[1].float3,$n[1].float3],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"exp","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"exp","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"floor","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"floor","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"length","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Color,"ps":0}],"sn":"$length","rt":$n[0].Single,"p":[$n[1].Color],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"length","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Quaternion,"ps":0}],"sn":"length$3","rt":$n[0].Single,"p":[$n[1].Quaternion],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"length","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0}],"sn":"length$1","rt":$n[0].Single,"p":[$n[1].float2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"length","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0}],"sn":"length$2","rt":$n[0].Single,"p":[$n[1].float3],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"lerp","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[1].Color,"ps":1},{"n":"T","pt":$n[0].Single,"ps":2}],"sn":"lerp","rt":$n[1].Color,"p":[$n[1].Color,$n[1].Color,$n[0].Single]},{"a":2,"n":"lerp","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Quaternion,"ps":0},{"n":"B","pt":$n[1].Quaternion,"ps":1},{"n":"T","pt":$n[0].Single,"ps":2}],"sn":"lerp$3","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[1].Quaternion,$n[0].Single]},{"a":2,"n":"lerp","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[1].float2,"ps":1},{"n":"T","pt":$n[0].Single,"ps":2}],"sn":"lerp$1","rt":$n[1].float2,"p":[$n[1].float2,$n[1].float2,$n[0].Single]},{"a":2,"n":"lerp","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1},{"n":"T","pt":$n[0].Single,"ps":2}],"sn":"lerp$2","rt":$n[1].float3,"p":[$n[1].float3,$n[1].float3,$n[0].Single]},{"a":2,"n":"lerp","is":true,"t":8,"pi":[{"n":"A","pt":$n[0].Single,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1},{"n":"T","pt":$n[0].Single,"ps":2}],"sn":"lerp$4","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"log","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"log","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"log","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"logBase","pt":$n[0].Single,"ps":1}],"sn":"log$1","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"log10","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"log10","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"max","is":true,"t":8,"pi":[{"n":"val1","pt":$n[0].Single,"ps":0},{"n":"val2","pt":$n[0].Single,"ps":1}],"sn":"max","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"min","is":true,"t":8,"pi":[{"n":"val1","pt":$n[0].Single,"ps":0},{"n":"val2","pt":$n[0].Single,"ps":1}],"sn":"min","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"normalize","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Color,"ps":0}],"sn":"normalize","rt":$n[1].Color,"p":[$n[1].Color]},{"a":2,"n":"normalize","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].Quaternion,"ps":0}],"sn":"normalize$3","rt":$n[1].Quaternion,"p":[$n[1].Quaternion]},{"a":2,"n":"normalize","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0}],"sn":"normalize$1","rt":$n[1].float2,"p":[$n[1].float2]},{"a":2,"n":"normalize","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0}],"sn":"normalize$2","rt":$n[1].float3,"p":[$n[1].float3]},{"a":2,"n":"pow","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"y","pt":$n[0].Single,"ps":1}],"sn":"pow","rt":$n[0].Single,"p":[$n[0].Single,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"rotate90ccw","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0}],"sn":"rotate90ccw","rt":$n[1].float2,"p":[$n[1].float2]},{"a":2,"n":"rotate90cw","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0}],"sn":"rotate90cw","rt":$n[1].float2,"p":[$n[1].float2]},{"a":2,"n":"round","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"round","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"saturate","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"saturate","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"sign","is":true,"t":8,"pi":[{"n":"value","pt":$n[0].Single,"ps":0}],"sn":"sign","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"sin","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"sin","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"sqrt","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"sqrt","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"tan","is":true,"t":8,"pi":[{"n":"x","pt":$n[0].Single,"ps":0}],"sn":"tan","rt":$n[0].Single,"p":[$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"E","is":true,"t":4,"rt":$n[0].Single,"sn":"E","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"PI","is":true,"t":4,"rt":$n[0].Single,"sn":"PI","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"TAU","is":true,"t":4,"rt":$n[0].Single,"sn":"TAU","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Quote.Color", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[0].Single,$n[0].Single],"pi":[{"n":"R","pt":$n[0].Single,"ps":0},{"n":"G","pt":$n[0].Single,"ps":1},{"n":"B","pt":$n[0].Single,"ps":2}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single],"pi":[{"n":"R","pt":$n[0].Single,"ps":0},{"n":"G","pt":$n[0].Single,"ps":1},{"n":"B","pt":$n[0].Single,"ps":2},{"n":"A","pt":$n[0].Single,"ps":3}],"sn":"$ctor2"},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[0].String},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[1].Color,"ps":1}],"sn":"op_Addition","rt":$n[1].Color,"p":[$n[1].Color,$n[1].Color]},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Addition$1","rt":$n[1].Color,"p":[$n[1].Color,$n[0].Single]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[1].Color,"ps":1}],"sn":"op_Division","rt":$n[1].Color,"p":[$n[1].Color,$n[1].Color]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Division$1","rt":$n[1].Color,"p":[$n[1].Color,$n[0].Single]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[1].Color,"ps":1}],"sn":"op_Multiply","rt":$n[1].Color,"p":[$n[1].Color,$n[1].Color]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Multiply$1","rt":$n[1].Color,"p":[$n[1].Color,$n[0].Single]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[1].Color,"ps":1}],"sn":"op_Subtraction","rt":$n[1].Color,"p":[$n[1].Color,$n[1].Color]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Color,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Subtraction$1","rt":$n[1].Color,"p":[$n[1].Color,$n[0].Single]},{"a":2,"n":"A","t":4,"rt":$n[0].Single,"sn":"A","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"B","t":4,"rt":$n[0].Single,"sn":"B","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Blue","is":true,"t":4,"rt":$n[1].Color,"sn":"Blue"},{"a":2,"n":"G","t":4,"rt":$n[0].Single,"sn":"G","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Green","is":true,"t":4,"rt":$n[1].Color,"sn":"Green"},{"a":2,"n":"R","t":4,"rt":$n[0].Single,"sn":"R","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Red","is":true,"t":4,"rt":$n[1].Color,"sn":"Red"}]}; }, $n);
    $m("Quote.Quaternion", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single],"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"y","pt":$n[0].Single,"ps":1},{"n":"z","pt":$n[0].Single,"ps":2},{"n":"w","pt":$n[0].Single,"ps":3}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[0].String},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[1].Quaternion,"ps":1}],"sn":"op_Addition","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[1].Quaternion]},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Addition$1","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[0].Single]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[1].Quaternion,"ps":1}],"sn":"op_Division","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[1].Quaternion]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Division$1","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[0].Single]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[1].Quaternion,"ps":1}],"sn":"op_Multiply","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[1].Quaternion]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Multiply$1","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[0].Single]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[1].Quaternion,"ps":1}],"sn":"op_Subtraction","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[1].Quaternion]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Quaternion,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Subtraction$1","rt":$n[1].Quaternion,"p":[$n[1].Quaternion,$n[0].Single]},{"a":2,"n":"w","t":4,"rt":$n[0].Single,"sn":"w","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"x","t":4,"rt":$n[0].Single,"sn":"x","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"y","t":4,"rt":$n[0].Single,"sn":"y","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"z","t":4,"rt":$n[0].Single,"sn":"z","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Quote.float3", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].float2,$n[0].Single],"pi":[{"n":"xy","pt":$n[1].float2,"ps":0},{"n":"z","pt":$n[0].Single,"ps":1}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[1].float2],"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"yz","pt":$n[1].float2,"ps":1}],"sn":"$ctor2"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[0].Single,$n[0].Single],"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"y","pt":$n[0].Single,"ps":1},{"n":"z","pt":$n[0].Single,"ps":2}],"sn":"$ctor3"},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[0].String},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1}],"sn":"op_Addition","rt":$n[1].float3,"p":[$n[1].float3,$n[1].float3]},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"op_Addition$1","rt":$n[1].float3,"p":[$n[1].float3,$n[0].Single]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1}],"sn":"op_Division","rt":$n[1].float3,"p":[$n[1].float3,$n[1].float3]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"op_Division$1","rt":$n[1].float3,"p":[$n[1].float3,$n[0].Single]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1}],"sn":"op_Multiply","rt":$n[1].float3,"p":[$n[1].float3,$n[1].float3]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"op_Multiply$1","rt":$n[1].float3,"p":[$n[1].float3,$n[0].Single]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[1].float3,"ps":1}],"sn":"op_Subtraction","rt":$n[1].float3,"p":[$n[1].float3,$n[1].float3]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float3,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"op_Subtraction$1","rt":$n[1].float3,"p":[$n[1].float3,$n[0].Single]},{"a":2,"n":"back","is":true,"t":4,"rt":$n[1].float3,"sn":"back"},{"a":2,"n":"down","is":true,"t":4,"rt":$n[1].float3,"sn":"down"},{"a":2,"n":"forward","is":true,"t":4,"rt":$n[1].float3,"sn":"forward"},{"a":2,"n":"left","is":true,"t":4,"rt":$n[1].float3,"sn":"left"},{"a":2,"n":"one","is":true,"t":4,"rt":$n[1].float3,"sn":"one"},{"a":2,"n":"right","is":true,"t":4,"rt":$n[1].float3,"sn":"right"},{"a":2,"n":"up","is":true,"t":4,"rt":$n[1].float3,"sn":"up"},{"a":2,"n":"x","t":4,"rt":$n[0].Single,"sn":"x","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"y","t":4,"rt":$n[0].Single,"sn":"y","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"z","t":4,"rt":$n[0].Single,"sn":"z","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"zero","is":true,"t":4,"rt":$n[1].float3,"sn":"zero"}]}; }, $n);
    $m("Quote.float2", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[0].Single],"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"y","pt":$n[0].Single,"ps":1}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[0].String},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[1].float2,"ps":1}],"sn":"op_Addition","rt":$n[1].float2,"p":[$n[1].float2,$n[1].float2]},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"op_Addition$1","rt":$n[1].float2,"p":[$n[1].float2,$n[0].Single]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[1].float2,"ps":1}],"sn":"op_Division","rt":$n[1].float2,"p":[$n[1].float2,$n[1].float2]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"op_Division$1","rt":$n[1].float2,"p":[$n[1].float2,$n[0].Single]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"b","pt":$n[1].float2,"ps":1}],"sn":"op_Multiply","rt":$n[1].float2,"p":[$n[1].float2,$n[1].float2]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"b","pt":$n[0].Single,"ps":1}],"sn":"op_Multiply$1","rt":$n[1].float2,"p":[$n[1].float2,$n[0].Single]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[1].float2,"ps":1}],"sn":"op_Subtraction","rt":$n[1].float2,"p":[$n[1].float2,$n[1].float2]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"A","pt":$n[1].float2,"ps":0},{"n":"B","pt":$n[0].Single,"ps":1}],"sn":"op_Subtraction$1","rt":$n[1].float2,"p":[$n[1].float2,$n[0].Single]},{"a":2,"n":"xx","t":16,"rt":$n[1].float2,"g":{"a":2,"n":"get_xx","t":8,"rt":$n[1].float2,"fg":"xx"},"s":{"a":2,"n":"set_xx","t":8,"p":[$n[1].float2],"rt":$n[0].Void,"fs":"xx"},"fn":"xx"},{"a":2,"n":"xy","t":16,"rt":$n[1].float2,"g":{"a":2,"n":"get_xy","t":8,"rt":$n[1].float2,"fg":"xy"},"s":{"a":2,"n":"set_xy","t":8,"p":[$n[1].float2],"rt":$n[0].Void,"fs":"xy"},"fn":"xy"},{"a":2,"n":"yx","t":16,"rt":$n[1].float2,"g":{"a":2,"n":"get_yx","t":8,"rt":$n[1].float2,"fg":"yx"},"s":{"a":2,"n":"set_yx","t":8,"p":[$n[1].float2],"rt":$n[0].Void,"fs":"yx"},"fn":"yx"},{"a":2,"n":"yy","t":16,"rt":$n[1].float2,"g":{"a":2,"n":"get_yy","t":8,"rt":$n[1].float2,"fg":"yy"},"s":{"a":2,"n":"set_yy","t":8,"p":[$n[1].float2],"rt":$n[0].Void,"fs":"yy"},"fn":"yy"},{"a":2,"n":"x","t":4,"rt":$n[0].Single,"sn":"x","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"y","t":4,"rt":$n[0].Single,"sn":"y","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Quote.Debug", function () { return {"att":1048576,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"}]}; }, $n);
    $m("Quote.Input", function () { return {"nested":[$n[1].Input.Button,$n[1].Input.Keys,$n[1].Input.Buttons],"att":1048576,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"GetKey","is":true,"t":8,"pi":[{"n":"button","pt":$n[1].Input.Buttons,"ps":0}],"sn":"GetKey","rt":$n[0].Boolean,"p":[$n[1].Input.Buttons],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetKey","is":true,"t":8,"pi":[{"n":"key","pt":$n[1].Input.Keys,"ps":0}],"sn":"GetKey$1","rt":$n[0].Boolean,"p":[$n[1].Input.Keys],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetKeyDown","is":true,"t":8,"pi":[{"n":"button","pt":$n[1].Input.Buttons,"ps":0}],"sn":"GetKeyDown","rt":$n[0].Boolean,"p":[$n[1].Input.Buttons],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetKeyDown","is":true,"t":8,"pi":[{"n":"key","pt":$n[1].Input.Keys,"ps":0}],"sn":"GetKeyDown$1","rt":$n[0].Boolean,"p":[$n[1].Input.Keys],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetKeyUp","is":true,"t":8,"pi":[{"n":"button","pt":$n[1].Input.Buttons,"ps":0}],"sn":"GetKeyUp","rt":$n[0].Boolean,"p":[$n[1].Input.Buttons],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetKeyUp","is":true,"t":8,"pi":[{"n":"key","pt":$n[1].Input.Keys,"ps":0}],"sn":"GetKeyUp$1","rt":$n[0].Boolean,"p":[$n[1].Input.Keys],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetMouseButton","is":true,"t":8,"pi":[{"n":"button","pt":$n[1].Input.Button,"ps":0}],"sn":"GetMouseButton","rt":$n[0].Boolean,"p":[$n[1].Input.Button],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetMouseButtonDown","is":true,"t":8,"pi":[{"n":"button","pt":$n[1].Input.Button,"ps":0}],"sn":"GetMouseButtonDown","rt":$n[0].Boolean,"p":[$n[1].Input.Button],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetMouseButtonUp","is":true,"t":8,"pi":[{"n":"button","pt":$n[1].Input.Button,"ps":0}],"sn":"GetMouseButtonUp","rt":$n[0].Boolean,"p":[$n[1].Input.Button],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"MouseDelta","is":true,"t":4,"rt":$n[1].float2,"sn":"MouseDelta"},{"a":2,"n":"ScrollWheel","is":true,"t":4,"rt":$n[0].Int32,"sn":"ScrollWheel","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("Quote.Input.Button", function () { return {"td":$n[1].Input,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Left","is":true,"t":4,"rt":$n[1].Input.Button,"sn":"Left","box":function ($v) { return Bridge.box($v, Quote.Input.Button, System.Enum.toStringFn(Quote.Input.Button));}},{"a":2,"n":"Middle","is":true,"t":4,"rt":$n[1].Input.Button,"sn":"Middle","box":function ($v) { return Bridge.box($v, Quote.Input.Button, System.Enum.toStringFn(Quote.Input.Button));}},{"a":2,"n":"Right","is":true,"t":4,"rt":$n[1].Input.Button,"sn":"Right","box":function ($v) { return Bridge.box($v, Quote.Input.Button, System.Enum.toStringFn(Quote.Input.Button));}}]}; }, $n);
    $m("Quote.Input.Keys", function () { return {"td":$n[1].Input,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"A","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"A","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"B","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"B","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Backspace","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Backspace","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"C","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"C","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D0","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D0","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D1","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D1","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D2","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D2","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D3","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D3","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D4","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D4","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D5","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D5","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D6","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D6","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D7","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D7","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D8","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D8","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"D9","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"D9","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Delete","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Delete","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"E","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"E","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Enter","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Enter","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F1","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F1","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F10","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F10","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F11","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F11","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F12","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F12","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F2","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F2","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F3","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F3","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F4","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F4","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F5","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F5","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F6","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F6","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F7","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F7","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F8","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F8","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"F9","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"F9","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"G","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"G","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"H","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"H","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"I","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"I","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Insert","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Insert","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"J","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"J","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"K","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"K","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"L","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"L","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"M","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"M","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"N","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"N","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"O","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"O","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"P","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"P","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"PrintScreen","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"PrintScreen","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Q","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Q","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"R","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"R","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"S","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"S","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Space","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Space","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"T","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"T","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Tab","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Tab","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"U","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"U","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"V","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"V","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"W","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"W","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"X","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"X","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Y","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Y","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"Z","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"Z","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"lAlt","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"lAlt","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"lCtrl","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"lCtrl","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"lShift","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"lShift","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"rAlt","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"rAlt","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"rCtrl","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"rCtrl","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}},{"a":2,"n":"rShift","is":true,"t":4,"rt":$n[1].Input.Keys,"sn":"rShift","box":function ($v) { return Bridge.box($v, Quote.Input.Keys, System.Enum.toStringFn(Quote.Input.Keys));}}]}; }, $n);
    $m("Quote.Input.Buttons", function () { return {"td":$n[1].Input,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"A","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"A","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"B","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"B","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"Down","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"Down","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"Left","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"Left","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"Right","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"Right","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"Up","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"Up","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"X","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"X","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"Y","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"Y","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"lBumper","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"lBumper","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"lStick","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"lStick","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"lTrigger","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"lTrigger","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"rBumper","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"rBumper","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"rStick","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"rStick","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}},{"a":2,"n":"rTrigger","is":true,"t":4,"rt":$n[1].Input.Buttons,"sn":"rTrigger","box":function ($v) { return Bridge.box($v, Quote.Input.Buttons, System.Enum.toStringFn(Quote.Input.Buttons));}}]}; }, $n);
    $m("Quote.Mesh", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String,$n[1].Material],"pi":[{"n":"model","pt":$n[0].String,"ps":0},{"n":"material","pt":$n[1].Material,"ps":1}],"sn":"ctor"},{"a":1,"n":"VBO","t":4,"rt":$n[0].Array.type(System.Single),"sn":"VBO"},{"a":1,"n":"material","t":4,"rt":$n[1].Material,"sn":"material"}]}; }, $n);
    $m("Quote.Material", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"shader","pt":$n[0].String,"ps":0}],"sn":"ctor"},{"a":2,"n":"GetFloat","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0}],"sn":"GetFloat","rt":$n[0].Single,"p":[$n[0].String],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"GetFloat2","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0}],"sn":"GetFloat2","rt":$n[1].float2,"p":[$n[0].String]},{"a":2,"n":"GetFloat3","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0}],"sn":"GetFloat3","rt":$n[1].float3,"p":[$n[0].String]},{"a":2,"n":"GetFloat4","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0}],"sn":"GetFloat4","rt":$n[1].Color,"p":[$n[0].String]},{"a":2,"n":"SetFloat","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0},{"n":"value","pt":$n[0].Single,"ps":1}],"sn":"SetFloat","rt":$n[0].Void,"p":[$n[0].String,$n[0].Single]},{"a":2,"n":"SetFloat2","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0},{"n":"value","pt":$n[0].Single,"ps":1}],"sn":"SetFloat2","rt":$n[0].Void,"p":[$n[0].String,$n[0].Single]},{"a":2,"n":"SetFloat3","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0},{"n":"value","pt":$n[0].Single,"ps":1}],"sn":"SetFloat3","rt":$n[0].Void,"p":[$n[0].String,$n[0].Single]},{"a":2,"n":"SetFloat4","t":8,"pi":[{"n":"name","pt":$n[0].String,"ps":0},{"n":"value","pt":$n[1].Color,"ps":1}],"sn":"SetFloat4","rt":$n[0].Void,"p":[$n[0].String,$n[1].Color]}]}; }, $n);
    $m("Quote.Quote", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"Start","is":true,"t":8,"sn":"Start","rt":$n[0].Void},{"a":2,"n":"Update","is":true,"t":8,"sn":"Update","rt":$n[0].Void},{"a":1,"n":"material","is":true,"t":4,"rt":$n[1].Material,"sn":"material"},{"a":1,"n":"mesh","is":true,"t":4,"rt":$n[1].Mesh,"sn":"mesh"}]}; }, $n);
    $m("Quote.Time", function () { return {"att":1048576,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Start","is":true,"t":8,"sn":"Start","rt":$n[0].Void},{"a":1,"n":"TicksToSeconds","is":true,"t":8,"pi":[{"n":"Ticks","pt":$n[0].Int64,"ps":0}],"sn":"TicksToSeconds","rt":$n[0].Single,"p":[$n[0].Int64],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Update","is":true,"t":8,"sn":"Update","rt":$n[0].Void},{"a":2,"n":"DeltaTime","is":true,"t":4,"rt":$n[0].Single,"sn":"DeltaTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"DeltaTimeInMilliseconds","is":true,"t":4,"rt":$n[0].Int32,"sn":"DeltaTimeInMilliseconds","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GameTime","is":true,"t":4,"rt":$n[0].Single,"sn":"GameTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"LastTicks","is":true,"t":4,"rt":$n[0].Int64,"sn":"LastTicks"},{"a":1,"n":"StartTicks","is":true,"t":4,"rt":$n[0].Int64,"sn":"StartTicks"},{"a":1,"n":"Ticks","is":true,"t":4,"rt":$n[0].Int64,"sn":"Ticks"}]}; }, $n);
});
